{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\steff\\\\Desktop\\\\React\\\\react-grid\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { AgGridColumn, AgGridReact } from 'ag-grid-react';\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  // const rowData = [\n  //   {make: \"Toyota\", model: \"Celica\", price: 35000},\n  //   {make: \"Ford\", model: \"Mondeo\", price: 32000},\n  //   {make: \"Porsche\", model: \"Boxter\", price: 72000}\n  // ];\n  const [rowData, setRowData] = useState([]);\n  useEffect(() => {\n    fetch('https://www.ag-grid.com/example-assets/row-data.json').then(result => result.json()).then(rowData => setRowData(rowData));\n  }, []);\n\n  const onButtonClick = e => {\n    const selectedNodes = gridRef.current.api.getSelectedNodes();\n    const selectedData = selectedNodes.map(node => node.data);\n    const selectedDataPresentation = selectedData.map(node => `${node.make} ${node.model}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ag-theme-alpine\",\n    style: {\n      height: 400,\n      width: 600\n    },\n    ref: gridRef,\n    rowSelection: \"multiple\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onButtonClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(AgGridReact, {\n      rowData: rowData,\n      children: [/*#__PURE__*/_jsxDEV(AgGridColumn, {\n        field: \"make\",\n        sortable: true,\n        filter: true,\n        checkboxSelection: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n        field: \"model\",\n        sortable: true,\n        filter: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n        field: \"price\",\n        sortable: true,\n        filter: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 8\n  }, this);\n};\n\n_s(App, \"xN2bMZkjhWQ3a2zx1ObaCbGfPzo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/steff/Desktop/React/react-grid/src/App.js"],"names":["React","useState","useEffect","useRef","AgGridColumn","AgGridReact","App","rowData","setRowData","fetch","then","result","json","onButtonClick","e","selectedNodes","gridRef","current","api","getSelectedNodes","selectedData","map","node","data","selectedDataPresentation","make","model","height","width"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,SAAQC,YAAR,EAAsBC,WAAtB,QAAwC,eAAxC;AAEA,OAAO,2CAAP;AACA,OAAO,mDAAP;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEhB;AACA;AACA;AACA;AACA;AAEA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,KAAK,CAAC,sDAAD,CAAL,CACCC,IADD,CACMC,MAAM,IAAIA,MAAM,CAACC,IAAP,EADhB,EAECF,IAFD,CAEMH,OAAO,IAAIC,UAAU,CAACD,OAAD,CAF3B;AAGD,GAJQ,EAIN,EAJM,CAAT;;AAMA,QAAMM,aAAa,GAAGC,CAAC,IAAI;AACzB,UAAMC,aAAa,GAAGC,OAAO,CAACC,OAAR,CAAgBC,GAAhB,CAAoBC,gBAApB,EAAtB;AACA,UAAMC,YAAY,GAAGL,aAAa,CAACM,GAAd,CAAkBC,IAAI,IAAIA,IAAI,CAACC,IAA/B,CAArB;AACA,UAAMC,wBAAwB,GAAGJ,YAAY,CAACC,GAAb,CAAiBC,IAAI,IAAK,GAAEA,IAAI,CAACG,IAAK,IAAGH,IAAI,CAACI,KAAM,EAApD,CAAjC;AACD,GAJD;;AAMC,sBACI;AACA,IAAA,SAAS,EAAC,iBADV;AAEA,IAAA,KAAK,EAAE;AAACC,MAAAA,MAAM,EAAE,GAAT;AAAcC,MAAAA,KAAK,EAAE;AAArB,KAFP;AAGA,IAAA,GAAG,EAAEZ,OAHL;AAIA,IAAA,YAAY,EAAC,UAJb;AAAA,4BAME;AAAQ,MAAA,OAAO,EAAEH;AAAjB;AAAA;AAAA;AAAA;AAAA,YANF,eAOI,QAAC,WAAD;AACI,MAAA,OAAO,EAAEN,OADb;AAAA,8BAEI,QAAC,YAAD;AACA,QAAA,KAAK,EAAC,MADN;AAEA,QAAA,QAAQ,EAAE,IAFV;AAGA,QAAA,MAAM,EAAE,IAHR;AAIA,QAAA,iBAAiB,EAAE;AAJnB;AAAA;AAAA;AAAA;AAAA,cAFJ,eASI,QAAC,YAAD;AAAc,QAAA,KAAK,EAAC,OAApB;AAA4B,QAAA,QAAQ,EAAE,IAAtC;AAA4C,QAAA,MAAM,EAAE;AAApD;AAAA;AAAA;AAAA;AAAA,cATJ,eAUI,QAAC,YAAD;AAAc,QAAA,KAAK,EAAC,OAApB;AAA4B,QAAA,QAAQ,EAAE,IAAtC;AAA4C,QAAA,MAAM,EAAE;AAApD;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAsBF,CA5CD;;GAAMD,G;;KAAAA,G;AA8CN,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport {AgGridColumn, AgGridReact} from 'ag-grid-react';\n\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\n\nconst App = () => {\n  \n  // const rowData = [\n  //   {make: \"Toyota\", model: \"Celica\", price: 35000},\n  //   {make: \"Ford\", model: \"Mondeo\", price: 32000},\n  //   {make: \"Porsche\", model: \"Boxter\", price: 72000}\n  // ];\n\n  const [rowData, setRowData] = useState([]);\n\n  useEffect(() => {\n    fetch('https://www.ag-grid.com/example-assets/row-data.json')\n    .then(result => result.json())\n    .then(rowData => setRowData(rowData))\n  }, []); \n\n  const onButtonClick = e => {\n    const selectedNodes = gridRef.current.api.getSelectedNodes();\n    const selectedData = selectedNodes.map(node => node.data);\n    const selectedDataPresentation = selectedData.map(node => `${node.make} ${node.model}`)\n  }\n\n   return (\n       <div \n       className=\"ag-theme-alpine\" \n       style={{height: 400, width: 600}}\n       ref={gridRef}\n       rowSelection=\"multiple\"\n       >\n         <button onClick={onButtonClick}></button>\n           <AgGridReact\n               rowData={rowData}>\n               <AgGridColumn \n               field=\"make\" \n               sortable={true} \n               filter={true}\n               checkboxSelection={true}\n               >  \n               </AgGridColumn>\n               <AgGridColumn field=\"model\" sortable={true} filter={true}></AgGridColumn>\n               <AgGridColumn field=\"price\" sortable={true} filter={true}></AgGridColumn>\n           </AgGridReact>\n       </div>\n   );\n};\n\nexport default App;"]},"metadata":{},"sourceType":"module"}